version: '3.2'

volumes:
  data1:
    driver: local
  data2:
    driver: local
  data3:
    driver: local
  binaries1:
    driver: local
  binaries2:
    driver: local
  binaries3:
    driver: local
  debezium_config:
    driver: local
  debezium_logs:
    driver: local
  debezium_data:
    driver: local

networks:
  network:
    driver: bridge

services:
  broker1:
    image: 'bitnami/kafka:3.7.0'
    hostname: 'broker1'
    container_name: kafka_broker1
    networks:
      - network
    ports:
      - '9014:9014'
      - '9015:9015'
      - '9041:9041'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@broker1:9013,2@broker2:9023,3@broker3:9033
      - KAFKA_KRAFT_CLUSTER_ID=<ID> #CHANGE
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9012,CONTROLLER://:9013,EXTERNAL://:9014,LISTENER_GORO://:9015
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker1:9012,EXTERNAL://192.168.19.17:9014,LISTENER_GORO://10.129.0.16:9015
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,LISTENER_GORO:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # Others
      - TZ=Europe/Moscow
    volumes:
      - data1:/bitnami/kafka
      - binaries1:/opt/bitnami/kafka/bin
    restart: always

  broker2:
    image: 'bitnami/kafka:3.7.0'
    hostname: 'broker2'
    container_name: kafka_broker2
    networks:
      - network
    ports:
      - '9024:9024'
      - '9025:9025'
      - '9042:9042'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@broker1:9013,2@broker2:9023,3@broker3:9033
      - KAFKA_KRAFT_CLUSTER_ID=<ID> #CHANGE
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9022,CONTROLLER://:9023,EXTERNAL://:9024,LISTENER_GORO://:9025
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker2:9022,EXTERNAL://192.168.19.17:9024,LISTENER_GORO://10.129.0.16:9025
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,LISTENER_GORO:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # Others
      - TZ=Europe/Moscow
    volumes:
      - data2:/bitnami/kafka
      - binaries2:/opt/bitnami/kafka/bin
    restart: always

  broker3:
    image: 'bitnami/kafka:3.7.0'
    hostname: 'broker3'
    container_name: kafka_broker3
    networks:
      - network
    ports:
      - '9034:9034'
      - '9035:9035'
      - '9043:9043'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@broker1:9013,2@broker2:9023,3@broker3:9033
      - KAFKA_KRAFT_CLUSTER_ID=<ID> #CHANGE
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9032,CONTROLLER://:9033,EXTERNAL://:9034,LISTENER_GORO://:9035
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker3:9032,EXTERNAL://192.168.19.17:9034,LISTENER_GORO://10.129.0.16:9035
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,LISTENER_GORO:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
      # Others
      - TZ=Europe/Moscow
    volumes:
      - data3:/bitnami/kafka
      - binaries3:/opt/bitnami/kafka/bin
    restart: always

  provectus-ui:
    image: 'provectuslabs/kafka-ui:v0.7.2'
    hostname: 'provectus-ui'
    container_name: kafka_ui
    networks:
      - network
    ports:
      - '9991:8080'
    environment:
      # Authorization
      - AUTH_TYPE=LOGIN_FORM
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=<PASSWORD> #CHANGE
      # Cluster settings
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=broker1:9012,broker2:9022,broker3:9032
      - KAFKA_CLUSTERS_0_NAME=KAFKA-CDC
      # Others
      - TZ=Europe/Moscow
    restart: always

  debezium:
    image: 'debezium/connect:2.6'
    hostname: 'debezium'
    container_name: kafka_debezium
    ports:
      - 8083:8083
    networks:
      - network
    environment:
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=connect_configs
      - OFFSET_STORAGE_TOPIC=connect_offsets
      - STATUS_STORAGE_TOPIC=connect_statuses
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_DECIMAL_FORMAT=BASE64
      - BOOTSTRAP_SERVERS=broker1:9012,broker2:9022,broker3:9032
      - TZ=Europe/Moscow
    volumes:
      - debezium_config:/kafka/config
      - debezium_logs:/kafka/logs
      - debezium_data:/kafka/data
    restart: always

  debezium-ui:
    image: 'debezium/debezium-ui:2.5'
    hostname: 'debezium-ui'
    container_name: kafka_debezium_ui
    networks:
      - network
    ports:
      - 9992:8080
    environment:
      - KAFKA_CONNECT_URIS=http://debezium:8083
      - TZ=Europe/Moscow
    restart: always

  exporter:
    image: 'redpandadata/kminion:v2.2.8'
    hostname: 'exporter'
    container_name: kafka_exporter
    networks:
      - network
    ports:
      - '9996:8080'
    environment:
      - KAFKA_BROKERS=broker1:9012,broker2:9022,broker3:9032
      - TZ=Europe/Moscow
    restart: always%